---
- name: Check if file exists
  stat:
    path: /usr/local/bin/prometheus
  register: result

- name: Download prometheus
  unarchive:
    src: https://github.com/prometheus/prometheus/releases/download/v{{ version }}/prometheus-{{ version }}.linux-amd64.tar.gz
    dest: /tmp/
    remote_src: yes
  when: not result.stat.exists

- name: Creating prometheus user group
  group: name="{{ groupId }}"
  become: yes

- name: Creating prometheus user
  user:
    name: "{{ userId }}"
    group: "{{ groupId }}"
    system: yes
    shell: "/sbin/nologin"
    comment: "{{ userId }} nologin User"
    createhome: "no"
    state: present

- name: Copy prometheus file to bin
  copy:
    src: /tmp/prometheus-{{ version }}.linux-amd64/prometheus
    dest: /usr/local/bin/prometheus
    owner: "{{ userId }}"
    group: "{{ groupId }}"
    remote_src: yes
    mode: 0755
  when: not result.stat.exists

- name: Delete node exporter tmp folder
  file:
    path: /tmp/node_exporter-{{ version }}.linux-amd64
    state: absent

- name: Creates directory for temp data
  file: 
    path: /var/lib/prometheus
    state: directory
    owner: "{{userId}}"
    group: "{{groupId}}"
    mode: 0755

- name: Creates directory
  file: 
    path: /etc/prometheus/
    state: directory
    owner: "{{userId}}"
    group: "{{groupId}}"
    mode: 0755

- name: Copy config Prometheus
  copy:
    src: files/prometheus.conf
    dest: /etc/prometheus/prometheus.conf

- name: Alert config file
  copy:
    src: files/alert.rules.yml
    dest: /etc/prometheus/alert.rules.yml

- name: Copy systemd init file
  template:
    src: init.service.j2
    dest: /etc/systemd/system/prometheus.service
  notify: systemd_reload

- name: Start prometheus service
  service:
    name: prometheus
    state: started
    enabled: yes